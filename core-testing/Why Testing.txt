TODO: 程序开发人员为什么要了解软件测试 ?
1. 测试也是在编程，也是开发的一部分 vs 使用工具或者软件平台进行软件测试
2. 知道如何去测试写的程序能提高写程序本身的能力，要让你的程序通过测试，必须足够健壮
3. 用测试来保证程序的准确性，有利于软件的自动化部署
4. 对于面向toB的软件，任何一点的改动都需要确保不会引起被的错误，每一步的测试都需要通过

什么时候不做测试 ?
1. 测试并不能带来什么价值，没有验证什么东西
2. 测试永远不会失败，始终是固定的，和之后的代码变动没有关系
3. 测试的失败具有随机性，呈现一定的概率性，无法真正交付

TODO. 测试的目标
0. 要明白测试的意义在哪儿，不要做一样的重复测试 !!
1. 要保证方法中的什么逻辑被测试到(方法被测试到，不光是产生的结果)
2. 将集成测试降低成单元测试，降低成本: 通过Mock掉bean来避免直接启动spring
3. 如何验证：如果改变方法中的一行"有价值"语句, 则对应的单元测试应该失败 !!
4. 在spring环境中尽量少用static, 由于是全局影响，不利于测试; 可以使用bean，bean可以被替换
5. 要做的单元测试的流程和情况是什么?

TODO. 黑盒测试 (功能测试、数据驱动测试 DDT): 验收测试
测试者不了解程序的内部情况，不需了解程序代码、内部结构和编程语言, 只需要程序输入输出和系统功能
用户的角度针对软件界面、功能及外部结构进行测试，而不考虑程序内部逻辑结构

TODO. 白盒测试 (透明盒测试、结构测试、逻辑驱动测试): 单元测试
测试者了解待测试程序的内部结构、算法等信息，这是从程序设计者的角度对程序进行的测试
设计代码覆盖标准：控制流测试, 数据流测试, 分支测试, 语句覆盖, 判定覆盖, 修正条件/判定覆盖, 主要路径测试, 路径测试
TODO. 黑盒测试 (功能测试、数据驱动测试 DDT): 验收测试
测试者不了解程序的内部情况，不需了解程序代码、内部结构和编程语言, 只需要程序输入输出和系统功能
用户的角度针对软件界面、功能及外部结构进行测试，而不考虑程序内部逻辑结构

TODO. 白盒测试 (透明盒测试、结构测试、逻辑驱动测试): 单元测试
测试者了解待测试程序的内部结构、算法等信息，这是从程序设计者的角度对程序进行的测试
设计代码覆盖标准：控制流测试, 数据流测试, 分支测试, 语句覆盖, 判定覆盖, 修正条件/判定覆盖, 主要路径测试, 路径测试

TODO: 工作实战规则: 设计代码的目标 B2B长期提供
1. 测试文件名称规范，文件名称位置需要和被测试的文件处在同一个package
2. 尽量减少被测试文件中的方法的public，同一个package下可以不写
3. 对于private方法，需要判断是否值得测试，是否足够可靠
4. 一般而言，完成一定的功能和行数，就需要测试
5. Unit Test保证在最细微的，最小的单元
6. 尽量将测试设计到测试金字塔的底层，开销最小

TODO. Good Practices
单元测试不通过: 优先考虑修改源码，而非直接修改测试方法
系统升级时: 不应该减少测试数量，必须保证系统基本功能的测试覆盖
测试的案例: 普通场景 + 极限特殊场景 + 场景的反面
没有CI自动测试时: 对于有关DB影响的功能，需要SQL兼容性测试

单元测试名称规范: 说明测试的目的和用途
- generateReportCustomerTest()    兼容驼峰发命名规则
- generate_report_customer_test() 区别普通方法的测试方法命名规则(推荐)
- whenGenerateReport_WithSampleXmlFile_ThenOutputCsvFile_WithoutError_OK() 名称冗长，影响阅读